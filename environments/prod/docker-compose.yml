version: "3.7"

services:
  mariadb:
    image: wodby/mariadb:$MARIADB_TAG
    container_name: "${PROJECT_NAME}_mariadb"
    stop_grace_period: 30s
    environment:
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASSWORD

  php:
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_php"
    user: root
    environment:
      PHP_SENDMAIL_PATH: '"/usr/bin/dos2unix -u | /usr/sbin/ssmtp -t -f"'
      SSMTP_MAILHUB: mailhog:1025
      PHP_FPM_USER: wodby
      PHP_MAX_INPUT_TIME: 180
      PHP_POST_MAX_SIZE: 128M
      PHP_UPLOAD_MAX_FILESIZE: 128M
      PHP_MAX_EXECUTION_TIME: 180
      PHP_FPM_GROUP: wodby
      DRUSH_OPTIONS_URI: $PROJECT_BASE_URL
      PHP_FPM_CLEAR_ENV: 'false'
      PRODUCTION: 'true'
    volumes:
      - ./../../:/var/www/html:cached

  crond:
    image: wodby/drupal-php:$PHP_TAG
    container_name: "${PROJECT_NAME}_crond"
    environment:
      CRONTAB: "0 * * * * drush -r /var/www/html/web cron"
    command: sudo -E crond -f -d 0
    volumes:
      - ./../../:/var/www/html:cached

  nginx:
    image: wodby/nginx:$NGINX_TAG
    container_name: "${PROJECT_NAME}_nginx"
    depends_on:
      - php
    environment:
      NGINX_STATIC_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: /var/www/html/web
      NGINX_VHOST_PRESET: $NGINX_VHOST_PRESET
    volumes:
      - ./../../:/var/www/html:cached
    labels:
      - "traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`${PROJECT_BASE_URL}`)"

  #  redis:
  #    container_name: "${PROJECT_NAME}_redis"
  #    image: wodby/redis:$REDIS_TAG

  #  memcached:
  #    container_name: "${PROJECT_NAME}_memcached"
  #    image: wodby/memcached:$MEMCACHED_TAG

  node:
    image: wodby/node:$NODE_TAG
    container_name: "${PROJECT_NAME}_node"
    working_dir: /var/www/html/web/themes/custom/bancho
    user: root
    volumes:
      - ./../../:/var/www/html
    command: sh -c 'npm install && npm run production'

  traefik:
    image: traefik:v2.0
    container_name: "${PROJECT_NAME}_traefik"
    command: --api.insecure=true --providers.docker
    ports:
      - "${PROJECT_PORT}:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  files:
